"demora_organismo_2h_24h",
"demora_organismo_1_3d",
"demora_organismo_3_7d" )))
soporte <- 0.005
confianza <- 0.3
itemsets <- apriori(data = tabla_transactions,
parameter = list(supp = soporte,
conf = confianza,
minlen = 2,
maxlen = 3,
target = "rules"),appearance = list(rhs=c("demora_organismo_0_2h",
"demora_organismo_2h_24h",
"demora_organismo_1_3d",
"demora_organismo_3_7d" )))
soporte <- 0.005
confianza <- 0.4
itemsets <- apriori(data = tabla_transactions,
parameter = list(supp = soporte,
conf = confianza,
minlen = 2,
maxlen = 3,
target = "rules"),appearance = list(rhs=c("demora_organismo_0_2h",
"demora_organismo_2h_24h",
"demora_organismo_1_3d",
"demora_organismo_3_7d" )))
summary(itemsets)
top_20_itemsets <- sort(itemsets, by = "confidence", decreasing = TRUE)
inspect(top_20_itemsets)
soporte <- 0.005
confianza <- 0.6
itemsets <- apriori(data = tabla_transactions,
parameter = list(supp = soporte,
conf = confianza,
minlen = 2,
maxlen = 3,
target = "rules"),appearance = list(rhs=c("demora_organismo_0_2h",
"demora_organismo_2h_24h",
"demora_organismo_1_3d",
"demora_organismo_3_7d" )))
soporte <- 0.005
confianza <- 0.5
itemsets <- apriori(data = tabla_transactions,
parameter = list(supp = soporte,
conf = confianza,
minlen = 2,
maxlen = 3,
target = "rules"),appearance = list(rhs=c("demora_organismo_0_2h",
"demora_organismo_2h_24h",
"demora_organismo_1_3d",
"demora_organismo_3_7d" )))
summary(itemsets)
top_20_itemsets <- sort(itemsets, by = "confidence", decreasing = TRUE)
inspect(top_20_itemsets)
soporte <- 0.005
confianza <- 0.4
itemsets <- apriori(data = tabla_transactions,
parameter = list(supp = soporte,
conf = confianza,
minlen = 2,
maxlen = 3,
target = "rules"),appearance = list(rhs=c("demora_organismo_0_2h",
"demora_organismo_2h_24h",
"demora_organismo_1_3d",
"demora_organismo_3_7d" )))
summary(itemsets)
top_20_itemsets <- sort(itemsets, by = "confidence", decreasing = TRUE)
inspect(top_20_itemsets)
library(dplyr)
updateR()
install.packages("installr")
library(installr)
updateR()
install.packages("rrcov")
library(rrcov)
#Se crean 3 perfiles modelo de expresión génica que pueden tener los tumores
tumor_1 <- c(1,1,0,-0.5,-1,-1,0,1,1)
tumor_2 <- c(-1,-1,-1 ,-0.5,0,0,1,1,1)
tumor_3 <- c(1,1,1 ,1,1,1,-1,-1,-1)
#Añadiendo ruido aleatorio se generan 3 muestras a partir de cada perfil modelo
set.seed(755)
tumor_a <- tumor_1 + rnorm(n = 9, mean = 0, sd = 0.2)
tumor_b <- tumor_1 + rnorm(n = 9, mean = 0, sd = 0.2)
tumor_c <- tumor_1 + rnorm(n = 9, mean = 0, sd = 0.2)
tumor_d <- tumor_2 + rnorm(n = 9, mean = 0, sd = 0.2)
tumor_e <- tumor_2 + rnorm(n = 9, mean = 0, sd = 0.2)
tumor_f <- tumor_2 + rnorm(n = 9, mean = 0, sd = 0.2)
tumor_g <- tumor_3 + rnorm(n = 9, mean = 0, sd = 0.2)
tumor_h <- tumor_3 + rnorm(n = 9, mean = 0, sd = 0.2)
tumor_i <- tumor_3 + rnorm(n = 9, mean = 0, sd = 0.2)
# Representación de los perfiles
plot(0,0, xlim = c(0,10), ylim = c(-2.5, 2.5), type = "n",
main = "Perfil de expresión génica de 9 tumores")
lines(x = 1:9, y = tumor_a, type = "b", col = "blue")
lines(x = 1:9, y = tumor_b, type = "b", col = "blue")
lines(x = 1:9, y = tumor_c, type = "b", col = "blue")
lines(x = 1:9, y = tumor_d, type = "b", col = "firebrick")
lines(x = 1:9, y = tumor_e, type = "b", col = "firebrick")
lines(x = 1:9, y = tumor_f, type = "b", col = "firebrick")
lines(x = 1:9, y = tumor_g, type = "b", col = "cyan3")
lines(x = 1:9, y = tumor_h, type = "b", col = "cyan3")
lines(x = 1:9, y = tumor_i, type = "b", col = "cyan3")
legend("topright", legend = c("Tumor tipo 1", "Tumor tipo 2", "Tumor tipo 3"),
col = c("blue", "firebrick", "cyan3"), lty = 1, cex = 0.65)
tumor_a
library(ggplot2)
library(tidyr)
library(dplyr)
datos <- data.frame(gene = paste("gene_", 1:9, sep = ""), tumor_a, tumor_b,
tumor_c, tumor_d, tumor_e, tumor_f, tumor_g,
tumor_h, tumor_i)
datos_tidy <- gather(data = datos, key = tumor, value = expresion, -1)
ggplot(data = datos_tidy, aes(x = gene, y = expresion, color = tumor)) +
geom_path(aes(group = tumor)) +
geom_point() +
theme_bw() +
facet_grid(tumor~.) +
theme(legend.position = "none")
A<- matrix(c(1,2,-1,1,0,1,3,1,0,0,2,0,0,0,1,-1)),nrow=4,ncol=4,byrow=T)
A<- matrix(c(1,2,-1,1,0,1,3,1,0,0,2,0,0,0,1,-1)),nrow=4,ncol=4,byrow=T)
A<- matrix(c(1,2,-1,1,0,1,3,1,0,0,2,0,0,0,1,-1),nrow=4,ncol=4,byrow=T)
View(A)
A
eigen(A)$values
sum(diag(A))
sum(eigen(A)$values)
det(A)
prod(eigen(A)$values)
t(A)
det(t(A))
solve(A)
A%*%solve(A)
det(Solve(A))
det(solve(A))
eigen(solve(A))$values
eigen(A)$values
eigen(A)$vector
eigen(A)$vector[,1]
A%*%eigen(A)$vectors[,1]
2*eigen(A)$vectors[,1]
sqrt(sum(eigen(A)$vectors[,1]^2))
A
var(A)
scale(A)
var(A)
var_covar_A= var(A)
corr_A= var(scale(A))
cor(A)
var(scale(A))
-.5458*.52-.5*.5832+.49*.7479+.5*.3357
a <- c(2,5,7,8,3)
3)
a <- c(2,5,8,7,3)
a
mean(a)
b<- a-mean(a)
mean(b)
a <- c(1,0,3,7,11)
mean(a)
mean(a)
b<- a-mean(a)
b
mean(b)
P<- rbind(H,M)
H <- c(24,6)
M <- c(56,14)
P<- rbind(H,M)
colnames(P) <- c("Empleado","Desempleado")
P
mosiacplot(P)
mosaicplot(P)
H2 <- c(24,60)
M2 <- c(56,14)
P<- rbind(H2,M2)
colnames(P) <- c("Empleado","Desempleado")
mosaicplot(P)
a<- c(3,4,2)
b <- c(1,7,1)
a*b
c <- a*b
matriz_A <- rbind(a,b,c)
View(matriz_A)
var(matriz_A)
eigen(matriz_A)
var(matriz_A)
eigen(var(matriz_A))
A <- rbind(a,b,c)
A
var(A)
cov(A)-var(A)
cov(A)
eigen(cov(A))
View(A)
A <- cbind(a,b,c)
var(A)
A
cor(A)
eigen(var(matriz_A))
install.packages("factoextra")
install.packages("igraph")
install.packages("tidygraph")
install.packages("ggraph")
install.packages("mclust")
library(numbers)
install.packages("numbers")
library(numbers)
primes(5,18)
?primes
library(numbers)
primes(1000)
library(numbers)
library(numbers)
primes(1000)
Primes(1000)
Primes(1000,1200)
Primes(800000,801000)
getwd()
Lote1=c(29.39,31.51,30.88,27.63,28.85)
Lote2=c(30.63,32.1,30.11,29.63,29.68)
Lote3=c(27.16,26.63,25.31,27.66,27.1)
Lote4=c(31.03,30.98,28.95,31.45,29.7)
Lote5=c(29.67,29.32,26.87,31.59,29.41)
Lotes=cbind(Lote1,Lote2,Lote3,Lote4,Lote5)
View(Lotes)
lote=data.frame("Lotes"=factor(c(rep(1,5),rep(2,5),rep(3,5),rep(4,5),rep(5,5))),
"Resistencia"=c(Lote1,Lote2,Lote3,Lote4,Lote5))
View(Lotes)
lote
install.packages("UsingR")
View(lote)
Lote1=c(29.39,31.51,30.88,27.63,28.85)
Lote2=c(30.63,32.1,30.11,29.63,29.68)
Lote3=c(27.16,26.63,25.31,27.66,27.1)
Lote4=c(31.03,30.98,28.95,31.45,29.7)
Lote5=c(29.67,29.32,26.87,31.59,29.41)
Lotes=cbind(Lote1,Lote2,Lote3,Lote4,Lote5)
lote=data.frame("Lotes"=factor(c(rep(1,5),rep(2,5),rep(3,5),rep(4,5),rep(5,5)),
lote
lote=data.frame("Lotes"=factor(c(rep(1,5),rep(2,5),rep(3,5),rep(4,5),rep(5,5)),
lote=data.frame("Lotes"=factor(c(rep(1,5),rep(2,5),rep(3,5),rep(4,5),rep(5,5)),
"Resistencia"=c(Lote1,Lote2,Lote3,Lote4,Lote5)))
lote=data.frame("Lotes"=factor(c(rep(1,5),rep(2,5),rep(3,5),rep(4,5),rep(5,5)),
"Resistencia"=c(Lote1,Lote2,Lote3,Lote4,Lote5)))
lote=data.frame("Lotes"=factor(c(rep(1,5),rep(2,5),rep(3,5),rep(4,5),rep(5,5)),
"Resistencia"=c(Lote1,Lote2,Lote3,Lote4,Lote5)))
GrupoA=c(25,36,36,25,36,16,25,36,49,36,25)
GrupoB=c(121,36,36,64,36,81,49,25,64,49,121)
GrupoC=c(81,81,36,9,25,36,9,49,169,1,81)
GrupoD=c(25,25,36,25,36,25,25,25,25,25,25)
Tiempos=cbind(GrupoA,GrupoB,GrupoC,GrupoD)
View(Tiempos)
tiempo=data.frame("Grupos"=factor(c(rep(1,11),rep(2,11),rep(3,11),rep(4,11))),
"Tiempos"=c(GrupoA,GrupoB,GrupoC,GrupoD))
View(tiempo)
tiempo
lote=data.frame("Lotes"=factor(c(rep(1,5),rep(2,5),rep(3,5),rep(4,5),rep(5,5))),
"Resistencia"=c(Lote1,Lote2,Lote3,Lote4,Lote5)))
lote=data.frame("Lotes"=factor(c(rep(1,5),rep(2,5),rep(3,5),rep(4,5),rep(5,5))),
"Resistencia"=c(Lote1,Lote2,Lote3,Lote4,Lote5))
View(lote)
plot=ggplot(lote,aes(x=Lotes,y=Resistencia,fill=Grupos))+geom_boxplot()
library(readxl) ##Permite leer archivos xlsx
library(ggplot2) ##Paquete para confeccionar dibujos
library(ggrepel) ##Paquete que manipula etiquetas para gráficos
library(plotrix) ##Paquete para gráficos requerido para la libreria smacof
library(smacof)  ##Paquete para MDS basado en la minimización del stress
library(UsingR)
library(pgirmess)#pruebas a posteriori de kruskal wallis
library(MASS)
library(car)
plot=ggplot(lote,aes(x=Lotes,y=Resistencia,fill=Grupos))+geom_boxplot()
plot=ggplot(lote,aes(x=Lotes,y=Resistencia,fill=Lotes))+geom_boxplot()
plot
medias5=apply(Lotes,2,mean)
medias5
desvios5=apply(Lotes,2,sd)
desvios5
salida5=round(cbind(medias5,desvios5),3)
salida5
View(Lotes)
Lote1=c(29.39,31.51,30.88,27.63,28.85)
Lote2=c(30.63,32.1,30.11,29.63,29.68)
Lote3=c(27.16,26.63,25.31,27.66,27.1)
Lote4=c(31.03,30.98,28.95,31.45,29.7)
Lote5=c(29.67,29.32,26.87,31.59,29.41)
Lotes=rbind(Lote1,Lote2,Lote3,Lote4,Lote5)
View(Lotes)
lote=data.frame("Lotes"=factor(c(rep(1,5),rep(2,5),rep(3,5),rep(4,5),rep(5,5))),
"Resistencia"=c(Lote1,Lote2,Lote3,Lote4,Lote5))
lote
plot=ggplot(lote,aes(x=Lotes,y=Resistencia,fill=Lotes))+geom_boxplot()
plot
View(Lotes)
resist.aov=aov(lote~Resistencia,data=lote)
resist.aov=aov(lote~Resistencia,data=lote)
library(readxl) ##Permite leer archivos xlsx
library(ggplot2) ##Paquete para confeccionar dibujos
library(ggrepel) ##Paquete que manipula etiquetas para gráficos
library(plotrix) ##Paquete para gráficos requerido para la libreria smacof
library(smacof)  ##Paquete para MDS basado en la minimización del stress
library(UsingR)
library(pgirmess)#pruebas a posteriori de kruskal wallis
library(MASS)
library(car)
lote1 <- c(29.39,31.51,30.88,27.63,28.85)
lote2 <- c(30.63,32.10,30.11,29.63,29.68)
lote3 <- c(27.16,26.63,25.31,27.66,27.10)
lote4 <- c(31.03,30.98,28.95,31.45,29.70)
lote5 <- c(29.67,29.32,26.87,31.59,29.41)
proveedores = factor(c(rep('Lote1',5), rep('Lote2',5)), rep('Lote3',5), rep('Lote4',5), rep('Lote5', 5)))
resistencia = c(lote1,lote2,lote3,lote4,lote5)
data = data.frame(proveedores, resistencia)
proveedores = factor(c(rep('Lote1',5), rep('Lote2',5)), rep('Lote3',5), rep('Lote4',5), rep('Lote5', 5)))
proveedores = factor(c(rep('Lote1',5), rep('Lote2',5), rep('Lote3',5), rep('Lote4',5), rep('Lote5', 5)))
resistencia = c(lote1,lote2,lote3,lote4,lote5)
data = data.frame(proveedores, resistencia)
plot=ggplot(lote,aes(x=proveedores,y=resistencia,fill=proveedores))+geom_boxplot()
plot
plot=ggplot(proveedores,aes(x=proveedores,y=resistencia,fill=proveedores))+geom_boxplot()
plot=ggplot(data,aes(x=proveedores,y=resistencia,fill=proveedores))+geom_boxplot()
plot
medias5=apply(data,2,mean)
View(data)
resistencia
medias5=apply(data,2,mean)
medias5=apply(data,1,mean)
resistencia1 = cbind(lote1,lote2,lote3,lote4,lote5)
resistencia1
medias=apply(resistencia1,2,mean)
medias
desvios
desvios=apply(resistencia1,2,sd)
desvios
salida2=round(cbind(medias,desvios),3)
salida2
resist.aov=aov(data~resistencia,data=data)
resist.aov=aov(data~proveedores,data=data)
resist.aov=aov(data~proveedores,data=data)
resist.aov=aov(data~resistencia,data=data)
data = data.frame(proveedores,resistencia)
resist.aov=aov(data$resistencia ~ data$proveedores)
resist.aov
summary(resist.aov)
shapiro.test(residuals(resist.aov))
library(car)
leveneTest(data$resistencia, data$proveedores)
pairwise.t.test(data$resistencia, data$proveedores, p.adj = "bonferroni")
TukeyHSD(resist.aov, "marca")
TukeyHSD(resist.aov, "proveedores")
TukeyHSD(resist.aov, data$resistencia)
TukeyHSD(resist.aov, conf.level = 0.95)
salida2
leveneTest(data$resistencia, data$proveedores)
shapiro.test(residuals(resist.aov))
leveneTest(data$resistencia, data$proveedores)
resist.aov
summary(resist.aov)
pairwise.t.test(data$resistencia, data$proveedores, p.adj = "bonferroni")
TukeyHSD(resist.aov, conf.level = 0.95)
library(readxl)
clasifautos <- read_excel("C:/Users/Santiago Barez/Downloads/clasifautos.xlsx")
View(clasifautos)
clasifautos
library(factoextra) # para método de Pearson y heatmaps
library(igraph)
library(tidygraph)
library(ggraph)
library(dplyr) # para manejar bases
library(tidyverse)
library(cluster)
library(mclust)  #ejercicio 3
library("clValid") #validez de los algoritmos
# Se escalan las variables
datos <- scale(clasifautos, center = TRUE, scale = TRUE)
USArrests
USArrests?
USArrests?
?USArrests
clasifautos
autos <- na.omit(clasifautos)
autos.cuanti <- autos[,c("venta","reventa","precio","motor","CV","pisada","ancho","largo","peso","depóstito","mpg")]
autos.cuanti
autos.cuali <- autos[,c("marca","modelo","tipo")]
View(autos.cuali)
View(autos.cuanti)
head(autos)
autosnum=auto[,3:14]
autosnum=autos[,3:14]
dend <- autosnum%>% scale %>% dist()  %>% hclust(method = "ward.D" %>% as.dendrogram()
dend
dend
dend <- autosnum%>% scale %>% dist()  %>% hclust(method = "ward.D" %>% as.dendrogram()
par(mar=c(6,1,0.1,0.1))
autosnum%>% scale %>% dist()  %>% hclust(method = "ward.D" %>% as.dendrogram() -> dend
par(mar=c(6,1,0.1,0.1))
par(mar=c(6,1,0.1,0.1))
dend %>% set("branches_k_color", value=c("blue","red","purple","darkgreen"),k=4)%>%
dend %>% set("branches_k_color", value=c("blue","red","purple","darkgreen"),k=4)%>%
set("labels_cex",0.65 %>% set("labels",autos[,2])%>%
plot(axes=FALSE)
autosnum%>% scale %>% dist()  %>% hclust(method = "ward.D" %>% as.dendrogram() -> dend
par(mar=c(6,1,0.1,0.1))
dend %>% set("branches_k_color", value=c("blue","red","purple","darkgreen"),k=4)%>%
autosnum%>% scale %>% dist()  %>% hclust(method = "ward.D" %>% as.dendrogram() -> dend
par(mar=c(6,1,0.1,0.1))
autosnum%>% scale %>% dist()  %>% hclust(method = "ward.D" %>% as.dendrogram() -> dend
par(mar=c(6,1,0.1,0.1))
autosnum%>% scale %>% dist()  %>% hclust(method = "ward.D" %>% as.dendrogram() -> dend
par(mar=c(6,1,0.1,0.1))
autosnum %>% scale %>% dist()  %>% hclust(method = "ward.D" %>% as.dendrogram() -> dend
autosnum=autos[,3:14]
autosnum=autos[,3:14]
autosnum %>% scale %>% dist()  %>% hclust(method = "ward.D" %>% as.dendrogram() -> dend
par(mar=c(6,1,0.1,0.1))
autosnum %>% scale %>% dist() %>% hclust(method = "ward.D" %>% as.dendrogram() -> dend
par(mar=c(6,1,0.1,0.1))
dend %>%
set("labels_col", value=c("blue","red","purple","darkgreen"),k=4)%>%
plot(axes=FALSE)
plot(axes=FALSE)
autos1<- as.data.frame(autos)
autosnum=autos1[,3:14]
autosnum %>% scale %>% dist() %>% hclust(method = "ward.D" %>% as.dendrogram() -> dend
par(mar=c(6,1,0.1,0.1))
dend <- autosnum %>% scale %>% dist() %>% hclust(method = "ward.D" %>% as.dendrogram()
dend <- autosnum %>% scale %>% dist() %>% hclust(method = "ward.D" %>% as.dendrogram()
par(mar=c(6,1,0.1,0.1))
dend %>%
set("branches_k_color", value=c("blue","red","purple","darkgreen"),k=4)%>%
set("labels_col", value=c("blue","red","purple","darkgreen"),k=4)%>%
set("labels_cex",0.65 %>% set("labels",autos[,2])%>%
plot(axes=FALSE)
library(read)
library(magrittr)
dend %>%
set("branches_k_color", value=c("blue","red","purple","darkgreen"),k=4)%>%
set("labels_col", value=c("blue","red","purple","darkgreen"),k=4)%>%
set("labels_cex",0.65 %>% set("labels",autos[,2])%>%
plot(axes=FALSE)
dend <- autosnum %>% scale %>% dist() %>% hclust(method = "ward.D" %>% as.dendrogram()
par(mar=c(6,1,0.1,0.1))
dend %>%
set("branches_k_color", value=c("blue","red","purple","darkgreen"),k=4)%>%
set("labels_col", value=c("blue","red","purple","darkgreen"),k=4)%>%
set("labels_cex",0.65 %>% set("labels",autos[,2])%>%
plot(axes=FALSE)
autosnum=autos1[,3:14]
dend <- autosnum %>% scale %>% dist() %>% hclust(method = "ward.D" %>% as.dendrogram()
dend %>%
set("labels_col", value=c("blue","red","purple","darkgreen"),k=4)%>%
plot(axes=FALSE)
library(tibble)
library(dendextend)
dend <- autosnum %>% scale %>% dist() %>% hclust(method = "ward.D" %>% as.dendrogram()
par(mar=c(6,1,0.1,0.1))
dend %>%
set("branches_k_color", value=c("blue","red","purple","darkgreen"),k=4)%>%
set("labels_col", value=c("blue","red","purple","darkgreen"),k=4)%>%
set("labels_cex",0.65 %>% set("labels",autos[,2])%>%
plot(axes=FALSE)
dend <- autosnum %>% scale %>% dist() %>% hclust(method = "ward.D" %>% as.dendrogram()
dend <- autosnum%>%scale%>%dist()%>%hclust(method = "ward.D")%>% as.dendrogram()
par(mar=c(6,1,0.1,0.1))
dend %>%
set("labels_col", value=c("blue","red","purple","darkgreen"),k=4)%>%
plot(axes=FALSE)
plot(axes=TRUE)
dend <- autosnum%>%scale%>%dist()%>%hclust(method = "ward.D")%>% as.dendrogram()
par(mar=c(6,1,0.1,0.1))
dend %>%
set("branches_k_color", value=c("blue","red","purple","darkgreen"),k=4)%>%
set("labels_col", value=c("blue","red","purple","darkgreen"),k=4)%>%
set("labels_cex",0.65 %>% set("labels",autos1[,2])%>%
plot(axes=TRUE)
dend <- autosnum%>%scale%>%dist()%>%hclust(method = "ward.D")%>% as.dendrogram()
par(mar=c(6,1,0.1,0.1))
dend %>%
set("branches_k_color", value=c("blue","red","purple","darkgreen"),k=4)%>%
set("labels_col", value=c("blue","red","purple","darkgreen"),k=4)%>%
set("labels_cex",0.65 %>% set("labels",autos1[,2])%>%
plot(axes=TRUE)
dend <- autosnum%>%scale%>%dist()%>%hclust(method = "ward.D")%>% as.dendrogram()
par(mar=c(6,1,0.1,0.1))
dend %>%
set("branches_k_color", value=c("blue","red","purple","darkgreen"),k=4)%>%
set("labels_col", value=c("blue","red","purple","darkgreen"),k=4)%>%
set("labels_cex",0.65 %>% set("labels",autos1[,2])%>%
plot(axes=FALSE)
dend <- autosnum%>%scale%>%dist()%>%hclust(method = "ward.D")%>% as.dendrogram()
par(mar=c(6,1,0.1,0.1))
dend %>%
set("branches_k_color", value=c("blue","red","purple","darkgreen"),k=4)%>%
set("labels_col", value=c("blue","red","purple","darkgreen"),k=4)%>%
set("labels_cex",0.65 %>% set("labels",autos1[,2])%>%
plot(axes=FALSE)
dend <- autosnum%>%scale%>%dist()%>%hclust(method = "ward.D")%>% as.dendrogram()
clasifautos
library(readxl)
clasifautos <- read_excel("C:/Users/Santiago Barez/Downloads/clasifautos.xlsx")
View(clasifautos)
library(tibble)
library(dendextend)
autos <- na.omit(clasifautos)
autos1<- as.data.frame(autos)
autos.cuanti <- autos[,c("venta","reventa","precio","motor","CV","pisada","ancho","largo","peso","depóstito","mpg")]
autos.cuali <- autos[,c("marca","modelo","tipo")]
autosnum=autos1[,3:14]
dend <- autosnum%>%scale%>%dist()%>%hclust(method = "ward.D")%>% as.dendrogram()
par(mar=c(6,1,0.1,0.1))
dend %>%
set("labels_col", value=c("blue","red","purple","darkgreen"),k=4)%>%
plot(axes=FALSE)
source("C:/desarrollo/labo/src/ranger/433_ranger_BO.r", echo=TRUE)
